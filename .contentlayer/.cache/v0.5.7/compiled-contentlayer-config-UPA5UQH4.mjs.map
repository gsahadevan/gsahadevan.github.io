{
  "version": 3,
  "sources": ["../../../src/data/siteMetadata.js", "../../../contentlayer.config.ts"],
  "sourcesContent": ["/** @type {import(\"pliny/config\").PlinyConfig } */\nconst siteMetadata = {\n    title: 'Next.js Starter Blog',\n    author: 'Tails Azimuth',\n    headerTitle: 'TailwindBlog',\n    description: 'A blog created with Next.js and Tailwind.css',\n    language: 'en-us',\n    theme: 'system', // system, dark or light\n    siteUrl: 'https://tailwind-nextjs-starter-blog.vercel.app',\n    siteRepo: 'https://github.com/timlrx/tailwind-nextjs-starter-blog',\n    siteLogo: `${process.env.BASE_PATH || ''}/static/images/logo.png`,\n    socialBanner: `${process.env.BASE_PATH || ''}/static/images/twitter-card.png`,\n    mastodon: 'https://mastodon.social/@mastodonuser',\n    email: 'address@yoursite.com',\n    github: 'https://github.com',\n    x: 'https://twitter.com/x',\n    // twitter: 'https://twitter.com/Twitter',\n    facebook: 'https://facebook.com',\n    youtube: 'https://youtube.com',\n    linkedin: 'https://www.linkedin.com',\n    threads: 'https://www.threads.net',\n    instagram: 'https://www.instagram.com',\n    medium: 'https://medium.com',\n    bluesky: 'https://bsky.app/',\n    locale: 'en-US',\n    // set to true if you want a navbar fixed to the top\n    stickyNav: false,\n    analytics: {\n        // If you want to use an analytics provider you have to add it to the\n        // content security policy in the `next.config.js` file.\n        // supports Plausible, Simple Analytics, Umami, Posthog or Google Analytics.\n        umamiAnalytics: {\n            // We use an env variable for this site to avoid other users cloning our analytics ID\n            umamiWebsiteId: process.env.NEXT_UMAMI_ID, // e.g. 123e4567-e89b-12d3-a456-426614174000\n            // You may also need to overwrite the script if you're storing data in the US - ex:\n            // src: 'https://us.umami.is/script.js'\n            // Remember to add 'us.umami.is' in `next.config.js` as a permitted domain for the CSP\n        },\n        // plausibleAnalytics: {\n        //   plausibleDataDomain: '', // e.g. tailwind-nextjs-starter-blog.vercel.app\n        // If you are hosting your own Plausible.\n        //   src: '', // e.g. https://plausible.my-domain.com/js/script.js\n        // },\n        // simpleAnalytics: {},\n        // posthogAnalytics: {\n        //   posthogProjectApiKey: '', // e.g. 123e4567-e89b-12d3-a456-426614174000\n        // },\n        // googleAnalytics: {\n        //   googleAnalyticsId: '', // e.g. G-XXXXXXX\n        // },\n    },\n    newsletter: {\n        // supports mailchimp, buttondown, convertkit, klaviyo, revue, emailoctopus, beehive\n        // Please add your .env file and modify it according to your selection\n        provider: 'buttondown',\n    },\n    comments: {\n        // If you want to use an analytics provider you have to add it to the\n        // content security policy in the `next.config.js` file.\n        // Select a provider and use the environment variables associated to it\n        // https://vercel.com/docs/environment-variables\n        provider: 'giscus', // supported providers: giscus, utterances, disqus\n        giscusConfig: {\n            // Visit the link below, and follow the steps in the 'configuration' section\n            // https://giscus.app/\n            repo: process.env.NEXT_PUBLIC_GISCUS_REPO,\n            repositoryId: process.env.NEXT_PUBLIC_GISCUS_REPOSITORY_ID,\n            category: process.env.NEXT_PUBLIC_GISCUS_CATEGORY,\n            categoryId: process.env.NEXT_PUBLIC_GISCUS_CATEGORY_ID,\n            mapping: 'pathname', // supported options: pathname, url, title\n            reactions: '1', // Emoji reactions: 1 = enable / 0 = disable\n            // Send discussion metadata periodically to the parent window: 1 = enable / 0 = disable\n            metadata: '0',\n            // theme example: light, dark, dark_dimmed, dark_high_contrast\n            // transparent_dark, preferred_color_scheme, custom\n            theme: 'light',\n            // theme when dark mode\n            darkTheme: 'transparent_dark',\n            // If the theme option above is set to 'custom`\n            // please provide a link below to your custom theme css file.\n            // example: https://giscus.app/themes/custom_example.css\n            themeURL: '',\n            // This corresponds to the `data-lang=\"en\"` in giscus's configurations\n            lang: 'en',\n        },\n    },\n    search: {\n        provider: 'kbar', // kbar or algolia\n        kbarConfig: {\n            searchDocumentsPath: `${process.env.BASE_PATH || ''}/search.json`, // path to load documents to search\n        },\n        // provider: 'algolia',\n        // algoliaConfig: {\n        //   // The application ID provided by Algolia\n        //   appId: 'R2IYF7ETH7',\n        //   // Public API key: it is safe to commit it\n        //   apiKey: '599cec31baffa4868cae4e79f180729b',\n        //   indexName: 'docsearch',\n        // },\n    },\n}\n\nmodule.exports = siteMetadata\n", "import { defineDocumentType, ComputedFields, makeSource } from 'contentlayer2/source-files';\nimport { writeFileSync } from 'fs';\nimport readingTime from 'reading-time';\nimport { slug } from 'github-slugger';\nimport path from 'path';\nimport { fromHtmlIsomorphic } from 'hast-util-from-html-isomorphic';\n\n// Remark packages\nimport remarkGfm from 'remark-gfm';\nimport remarkMath from 'remark-math';\nimport { remarkAlert } from 'remark-github-blockquote-alert';\nimport {\n    remarkExtractFrontmatter,\n    remarkCodeTitles,\n    remarkImgToJsx,\n    extractTocHeadings,\n} from 'pliny/mdx-plugins/index.js';\n\n// Rehype packages\nimport rehypeSlug from 'rehype-slug';\nimport rehypeAutolinkHeadings from 'rehype-autolink-headings';\nimport rehypeKatex from 'rehype-katex';\nimport rehypeKatexNoTranslate from 'rehype-katex-notranslate';\nimport rehypeCitation from 'rehype-citation';\nimport rehypePrismPlus from 'rehype-prism-plus';\nimport rehypePresetMinify from 'rehype-preset-minify';\nimport siteMetadata from './src/data/siteMetadata';\nimport { allCoreContent, sortPosts } from 'pliny/utils/contentlayer.js';\nimport prettier from 'prettier';\n\nconst root = process.cwd();\nconst isProduction = process.env.NODE_ENV === 'production';\n\n// heroicon mini link\nconst icon = fromHtmlIsomorphic(\n    `\n  <span class=\"content-header-link\">\n  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" className=\"w-5 h-5 linkicon\">\n  <path d=\"M12.232 4.232a2.5 2.5 0 0 1 3.536 3.536l-1.225 1.224a.75.75 0 0 0 1.061 1.06l1.224-1.224a4 4 0 0 0-5.656-5.656l-3 3a4 4 0 0 0 .225 5.865.75.75 0 0 0 .977-1.138 2.5 2.5 0 0 1-.142-3.667l3-3Z\" />\n  <path d=\"M11.603 7.963a.75.75 0 0 0-.977 1.138 2.5 2.5 0 0 1 .142 3.667l-3 3a2.5 2.5 0 0 1-3.536-3.536l1.225-1.224a.75.75 0 0 0-1.061-1.06l-1.224 1.224a4 4 0 1 0 5.656 5.656l3-3a4 4 0 0 0-.225-5.865Z\" />\n  </svg>\n  </span>\n`,\n    { fragment: true }\n);\n\nconst computedFields: ComputedFields = {\n    readingTime: { type: 'json', resolve: doc => readingTime(doc.body.raw) },\n    slug: {\n        type: 'string',\n        resolve: doc => doc._raw.flattenedPath.replace(/^.+?(\\/)/, ''),\n    },\n    path: {\n        type: 'string',\n        resolve: doc => doc._raw.flattenedPath,\n    },\n    filePath: {\n        type: 'string',\n        resolve: doc => doc._raw.sourceFilePath,\n    },\n    toc: { type: 'json', resolve: doc => extractTocHeadings(doc.body.raw) },\n};\n\n/**\n * Count the occurrences of all tags across blog posts and write to json file\n */\nasync function createTagCount(allBlogs) {\n    const tagCount: Record<string, number> = {};\n    allBlogs.forEach(file => {\n        if (file.tags && (!isProduction || file.draft !== true)) {\n            file.tags.forEach(tag => {\n                const formattedTag = slug(tag);\n                if (formattedTag in tagCount) {\n                    tagCount[formattedTag] += 1;\n                } else {\n                    tagCount[formattedTag] = 1;\n                }\n            });\n        }\n    });\n    const formatted = await prettier.format(JSON.stringify(tagCount, null, 2), { parser: 'json' });\n    writeFileSync('./src/app/tag-data.json', formatted);\n}\n\nfunction createSearchIndex(allBlogs) {\n    if (siteMetadata?.search?.provider === 'kbar' && siteMetadata.search.kbarConfig.searchDocumentsPath) {\n        writeFileSync(\n            `public/${path.basename(siteMetadata.search.kbarConfig.searchDocumentsPath)}`,\n            JSON.stringify(allCoreContent(sortPosts(allBlogs)))\n        );\n        console.log('Local search index generated...');\n    }\n}\n\nexport const Blog = defineDocumentType(() => ({\n    name: 'Blog',\n    filePathPattern: 'blog/**/*.mdx',\n    contentType: 'mdx',\n    fields: {\n        title: { type: 'string', required: true },\n        date: { type: 'date', required: true },\n        tags: { type: 'list', of: { type: 'string' }, default: [] },\n        lastmod: { type: 'date' },\n        draft: { type: 'boolean' },\n        summary: { type: 'string' },\n        images: { type: 'json' },\n        authors: { type: 'list', of: { type: 'string' } },\n        layout: { type: 'string' },\n        bibliography: { type: 'string' },\n        canonicalUrl: { type: 'string' },\n    },\n    computedFields: {\n        ...computedFields,\n        structuredData: {\n            type: 'json',\n            resolve: doc => ({\n                '@context': 'https://schema.org',\n                '@type': 'BlogPosting',\n                headline: doc.title,\n                datePublished: doc.date,\n                dateModified: doc.lastmod || doc.date,\n                description: doc.summary,\n                image: doc.images ? doc.images[0] : siteMetadata.socialBanner,\n                url: `${siteMetadata.siteUrl}/${doc._raw.flattenedPath}`,\n            }),\n        },\n    },\n}));\n\nexport const Authors = defineDocumentType(() => ({\n    name: 'Authors',\n    filePathPattern: 'authors/**/*.mdx',\n    contentType: 'mdx',\n    fields: {\n        name: { type: 'string', required: true },\n        avatar: { type: 'string' },\n        occupation: { type: 'string' },\n        company: { type: 'string' },\n        email: { type: 'string' },\n        twitter: { type: 'string' },\n        bluesky: { type: 'string' },\n        linkedin: { type: 'string' },\n        github: { type: 'string' },\n        layout: { type: 'string' },\n    },\n    computedFields,\n}));\n\nexport default makeSource({\n    contentDirPath: 'data',\n    documentTypes: [Blog, Authors],\n    mdx: {\n        cwd: process.cwd(),\n        remarkPlugins: [remarkExtractFrontmatter, remarkGfm, remarkCodeTitles, remarkMath, remarkImgToJsx, remarkAlert],\n        rehypePlugins: [\n            rehypeSlug,\n            [\n                rehypeAutolinkHeadings,\n                {\n                    behavior: 'prepend',\n                    headingProperties: {\n                        className: ['content-header'],\n                    },\n                    content: icon,\n                },\n            ],\n            rehypeKatex,\n            rehypeKatexNoTranslate,\n            [rehypeCitation, { path: path.join(root, 'data') }],\n            [rehypePrismPlus, { defaultLanguage: 'js', ignoreMissing: true }],\n            rehypePresetMinify,\n        ],\n    },\n    onSuccess: async importData => {\n        const { allBlogs } = await importData();\n        createTagCount(allBlogs);\n        createSearchIndex(allBlogs);\n    },\n});\n"],
  "mappings": "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",
  "names": ["siteMetadata", "siteMetadata"]
}
